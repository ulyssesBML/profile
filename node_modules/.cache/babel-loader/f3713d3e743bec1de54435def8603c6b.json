{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Emitters = void 0;\n\nvar EmitterInstance_1 = require(\"./EmitterInstance\");\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar Emitter_1 = require(\"./Options/Classes/Emitter\");\n\nvar Enums_1 = require(\"./Enums\");\n\nvar Emitters = /*#__PURE__*/function () {\n  function Emitters(container) {\n    _classCallCheck(this, Emitters);\n\n    this.container = container;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n  }\n\n  _createClass(Emitters, [{\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b;\n\n      if (!options) {\n        return;\n      }\n\n      if (options.emitters) {\n        if (options.emitters instanceof Array) {\n          this.emitters = options.emitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.emitters instanceof Array) {\n            this.emitters = new Emitter_1.Emitter();\n          }\n\n          this.emitters.load(options.emitters);\n        }\n      }\n\n      var interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = interactivityEmitters.map(function (s) {\n            var tmp = new Emitter_1.Emitter();\n            tmp.load(s);\n            return tmp;\n          });\n        } else {\n          if (this.interactivityEmitters instanceof Array) {\n            this.interactivityEmitters = new Emitter_1.Emitter();\n          }\n\n          this.interactivityEmitters.load(interactivityEmitters);\n        }\n      }\n\n      if (this.emitters instanceof Array) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.emitters[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var emitterOptions = _step.value;\n            var emitter = new EmitterInstance_1.EmitterInstance(this, this.container, emitterOptions);\n            this.addEmitter(emitter);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      } else {\n        var _emitterOptions = this.emitters;\n\n        var _emitter = new EmitterInstance_1.EmitterInstance(this, this.container, _emitterOptions);\n\n        this.addEmitter(_emitter);\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.array[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var emitter = _step2.value;\n          emitter.play();\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.array[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var emitter = _step3.value;\n          emitter.pause();\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var container = this.container;\n      var emitterOptions = this.emitters;\n      var modeEmitters = this.interactivityEmitters;\n\n      if (mode === Enums_1.EmitterClickMode.emitter) {\n        var emitterModeOptions;\n\n        if (modeEmitters instanceof Array) {\n          if (modeEmitters.length > 0) {\n            emitterModeOptions = Utils_1.Utils.itemFromArray(modeEmitters);\n          }\n        } else {\n          emitterModeOptions = modeEmitters;\n        }\n\n        var emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? Utils_1.Utils.itemFromArray(emitterOptions) : emitterOptions;\n        var ePosition = container.interactivity.mouse.clickPosition;\n        var emitter = new EmitterInstance_1.EmitterInstance(this, this.container, Utils_1.Utils.deepExtend({}, emittersOptions), ePosition);\n        this.addEmitter(emitter);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.array[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var emitter = _step4.value;\n          emitter.resize();\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"addEmitter\",\n    value: function addEmitter(emitter) {\n      this.array.push(emitter);\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function removeEmitter(emitter) {\n      var index = this.array.indexOf(emitter);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }]);\n\n  return Emitters;\n}();\n\nexports.Emitters = Emitters;","map":null,"metadata":{},"sourceType":"script"}