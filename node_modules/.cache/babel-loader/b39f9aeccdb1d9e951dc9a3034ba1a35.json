{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MainSlim = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst SquareDrawer_1 = require(\"./ShapeDrawers/SquareDrawer\");\n\nconst TextDrawer_1 = require(\"./ShapeDrawers/TextDrawer\");\n\nconst ImageDrawer_1 = require(\"./ShapeDrawers/ImageDrawer\");\n\nconst Utils_1 = require(\"./Utils\");\n\nconst Types_1 = require(\"./Enums/Types\");\n\nconst LineDrawer_1 = require(\"./ShapeDrawers/LineDrawer\");\n\nconst CircleDrawer_1 = require(\"./ShapeDrawers/CircleDrawer\");\n\nconst TriangleDrawer_1 = require(\"./ShapeDrawers/TriangleDrawer\");\n\nconst StarDrawer_1 = require(\"./ShapeDrawers/StarDrawer\");\n\nconst PolygonDrawer_1 = require(\"./ShapeDrawers/PolygonDrawer\");\n\nconst Loader_1 = require(\"./Core/Loader\");\n\nclass MainSlim {\n  constructor() {\n    this.initialized = false;\n    const squareDrawer = new SquareDrawer_1.SquareDrawer();\n    const textDrawer = new TextDrawer_1.TextDrawer();\n    const imageDrawer = new ImageDrawer_1.ImageDrawer();\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.line, new LineDrawer_1.LineDrawer());\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.circle, new CircleDrawer_1.CircleDrawer());\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.edge, squareDrawer);\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.square, squareDrawer);\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.triangle, new TriangleDrawer_1.TriangleDrawer());\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.star, new StarDrawer_1.StarDrawer());\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.polygon, new PolygonDrawer_1.PolygonDrawer());\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.char, textDrawer);\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.character, textDrawer);\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.image, imageDrawer);\n    Utils_1.Plugins.addShapeDrawer(Types_1.ShapeType.images, imageDrawer);\n  }\n\n  init() {\n    if (!this.initialized) {\n      this.initialized = true;\n    }\n  }\n\n  loadFromArray(tagId, options, index) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return Loader_1.Loader.loadFromArray(tagId, options, index);\n    });\n  }\n\n  load(tagId, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return Loader_1.Loader.load(tagId, options);\n    });\n  }\n\n  set(id, element, options) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n      return Loader_1.Loader.set(id, element, options);\n    });\n  }\n\n  loadJSON(tagId, pathConfigJson) {\n    return Loader_1.Loader.loadJSON(tagId, pathConfigJson);\n  }\n\n  setOnClickHandler(callback) {\n    Loader_1.Loader.setOnClickHandler(callback);\n  }\n\n  dom() {\n    return Loader_1.Loader.dom();\n  }\n\n  domItem(index) {\n    return Loader_1.Loader.domItem(index);\n  }\n\n  addShape(shape, drawer, init, afterEffect, destroy) {\n    let customDrawer;\n\n    if (typeof drawer === \"function\") {\n      customDrawer = {\n        afterEffect: afterEffect,\n        destroy: destroy,\n        draw: drawer,\n        init: init\n      };\n    } else {\n      customDrawer = drawer;\n    }\n\n    Utils_1.Plugins.addShapeDrawer(shape, customDrawer);\n  }\n\n  addPreset(preset, options) {\n    Utils_1.Plugins.addPreset(preset, options);\n  }\n\n  addPlugin(plugin) {\n    Utils_1.Plugins.addPlugin(plugin);\n  }\n\n}\n\nexports.MainSlim = MainSlim;","map":null,"metadata":{},"sourceType":"script"}