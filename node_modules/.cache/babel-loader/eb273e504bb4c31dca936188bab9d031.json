{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Attractor = void 0;\n\nconst Utils_1 = require(\"../../../../Utils\");\n\nclass Attractor {\n  constructor(container) {\n    this.container = container;\n  }\n\n  interact(p1) {\n    var _a;\n\n    const container = this.container;\n    const options = container.options;\n    const distance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n    const pos1 = p1.getPosition();\n    const query = container.particles.quadTree.query(new Utils_1.Circle(pos1.x, pos1.y, distance));\n\n    for (const p2 of query) {\n      if (p1 === p2 || p2.particlesOptions.move.attract.enable) {\n        continue;\n      }\n\n      const pos2 = p2.getPosition();\n\n      const _Utils_1$Utils$getDis = Utils_1.Utils.getDistances(pos1, pos2),\n            dx = _Utils_1$Utils$getDis.dx,\n            dy = _Utils_1$Utils$getDis.dy;\n\n      const rotate = options.particles.move.attract.rotate;\n      const ax = dx / (rotate.x * 1000);\n      const ay = dy / (rotate.y * 1000);\n      p1.velocity.horizontal -= ax;\n      p1.velocity.vertical -= ay;\n      p2.velocity.horizontal += ax;\n      p2.velocity.vertical += ay;\n    }\n  }\n\n  isEnabled(particle) {\n    return particle.particlesOptions.move.attract.enable;\n  }\n\n  reset() {}\n\n}\n\nexports.Attractor = Attractor;","map":null,"metadata":{},"sourceType":"script"}