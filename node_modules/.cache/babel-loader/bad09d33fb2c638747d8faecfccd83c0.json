{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Infecter = void 0;\n\nconst Utils_1 = require(\"../../../../Utils\");\n\nclass Infecter {\n  constructor(container) {\n    this.container = container;\n  }\n\n  isEnabled() {\n    return this.container.options.infection.enable;\n  }\n\n  reset() {}\n\n  interact(p1, delta) {\n    var _a, _b;\n\n    const infecter1 = p1.infecter;\n    infecter1.updateInfection(delta.value);\n\n    if (infecter1.infectionStage === undefined) {\n      return;\n    }\n\n    const container = this.container;\n    const options = container.options;\n    const infectionOptions = options.infection;\n\n    if (!infectionOptions.enable || infectionOptions.stages.length < 1) {\n      return;\n    }\n\n    const infectionStage1 = infectionOptions.stages[infecter1.infectionStage];\n    const pxRatio = container.retina.pixelRatio;\n    const radius = p1.size.value * 2 + infectionStage1.radius * pxRatio;\n    const pos = p1.getPosition();\n    const infectedStage1 = (_a = infectionStage1.infectedStage) !== null && _a !== void 0 ? _a : infecter1.infectionStage;\n    const query = container.particles.quadTree.query(new Utils_1.Circle(pos.x, pos.y, radius)).filter(p => p.infecter.infectionStage === undefined || p.infecter.infectionStage !== infecter1.infectionStage);\n    const infections = infectionStage1.rate;\n    const neighbors = query.length;\n\n    for (const p2 of query) {\n      const infecter2 = p2.infecter;\n\n      if (Math.random() < infections / neighbors) {\n        if (infecter2.infectionStage === undefined) {\n          infecter2.startInfection(infectedStage1);\n        } else if (infecter2.infectionStage < infecter1.infectionStage) {\n          infecter2.updateInfectionStage(infectedStage1);\n        } else if (infecter2.infectionStage > infecter1.infectionStage) {\n          const infectionStage2 = infectionOptions.stages[infecter2.infectionStage];\n          const infectedStage2 = (_b = infectionStage2 === null || infectionStage2 === void 0 ? void 0 : infectionStage2.infectedStage) !== null && _b !== void 0 ? _b : infecter2.infectionStage;\n          infecter1.updateInfectionStage(infectedStage2);\n        }\n      }\n    }\n  }\n\n}\n\nexports.Infecter = Infecter;","map":null,"metadata":{},"sourceType":"script"}