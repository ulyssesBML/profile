{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageDrawer = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Enums_1 = require(\"../Enums\");\n\nvar ImageDrawer = /*#__PURE__*/function () {\n  function ImageDrawer() {\n    _classCallCheck(this, ImageDrawer);\n\n    this.images = [];\n  }\n\n  _createClass(ImageDrawer, [{\n    key: \"getImages\",\n    value: function getImages(container) {\n      var containerImages = this.images.filter(function (t) {\n        return t.id === container.id;\n      });\n\n      if (!containerImages.length) {\n        this.images.push({\n          id: container.id,\n          images: []\n        });\n        return this.getImages(container);\n      } else {\n        return containerImages[0];\n      }\n    }\n  }, {\n    key: \"addImage\",\n    value: function addImage(container, image) {\n      var containerImages = this.getImages(container);\n      containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n  }, {\n    key: \"init\",\n    value: function init(container) {\n      var _a;\n\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var options, shapeOptions, imageOptions, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, optionsImage;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = container.options;\n                shapeOptions = options.particles.shape;\n\n                if (!(!Utils_1.Utils.isInArray(Enums_1.ShapeType.image, shapeOptions.type) && !Utils_1.Utils.isInArray(Enums_1.ShapeType.images, shapeOptions.type))) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                imageOptions = (_a = shapeOptions.options[Enums_1.ShapeType.images]) !== null && _a !== void 0 ? _a : shapeOptions.options[Enums_1.ShapeType.image];\n\n                if (!(imageOptions instanceof Array)) {\n                  _context.next = 34;\n                  break;\n                }\n\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 9;\n                _iterator = imageOptions[Symbol.iterator]();\n\n              case 11:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 18;\n                  break;\n                }\n\n                optionsImage = _step.value;\n                _context.next = 15;\n                return this.loadImageShape(container, optionsImage);\n\n              case 15:\n                _iteratorNormalCompletion = true;\n                _context.next = 11;\n                break;\n\n              case 18:\n                _context.next = 24;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](9);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 24:\n                _context.prev = 24;\n                _context.prev = 25;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 27:\n                _context.prev = 27;\n\n                if (!_didIteratorError) {\n                  _context.next = 30;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 30:\n                return _context.finish(27);\n\n              case 31:\n                return _context.finish(24);\n\n              case 32:\n                _context.next = 36;\n                break;\n\n              case 34:\n                _context.next = 36;\n                return this.loadImageShape(container, imageOptions);\n\n              case 36:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[9, 20, 24, 32], [25,, 27, 31]]);\n      }));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.images = [];\n    }\n  }, {\n    key: \"loadImageShape\",\n    value: function loadImageShape(container, imageShape) {\n      return tslib_1.__awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var image;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (!imageShape.replaceColor) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 4;\n                return Utils_1.Utils.downloadSvgImage(imageShape.src);\n\n              case 4:\n                _context2.t0 = _context2.sent;\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return Utils_1.Utils.loadImage(imageShape.src);\n\n              case 9:\n                _context2.t0 = _context2.sent;\n\n              case 10:\n                image = _context2.t0;\n                this.addImage(container, image);\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t1 = _context2[\"catch\"](0);\n                console.warn(\"tsParticles error - \".concat(imageShape.src, \" not found\"));\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context, particle, radius, opacity) {\n      var _a, _b;\n\n      if (!context) {\n        return;\n      }\n\n      var image = particle.image;\n      var element = (_a = image === null || image === void 0 ? void 0 : image.data) === null || _a === void 0 ? void 0 : _a.element;\n\n      if (!element) {\n        return;\n      }\n\n      var ratio = (_b = image === null || image === void 0 ? void 0 : image.ratio) !== null && _b !== void 0 ? _b : 1;\n      var pos = {\n        x: -radius,\n        y: -radius\n      };\n\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = opacity;\n      }\n\n      context.drawImage(element, pos.x, pos.y, radius * 2, radius * 2 / ratio);\n\n      if (!(image === null || image === void 0 ? void 0 : image.data.svgData) || !(image === null || image === void 0 ? void 0 : image.replaceColor)) {\n        context.globalAlpha = 1;\n      }\n    }\n  }]);\n\n  return ImageDrawer;\n}();\n\nexports.ImageDrawer = ImageDrawer;","map":null,"metadata":{},"sourceType":"script"}