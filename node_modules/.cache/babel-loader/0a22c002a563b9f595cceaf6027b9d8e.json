{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Retina = void 0;\n\nconst Utils_1 = require(\"../Utils\");\n\nclass Retina {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init() {\n    const container = this.container;\n    const options = container.options;\n\n    if (options.detectRetina) {\n      this.pixelRatio = Utils_1.Utils.isSsr() ? 1 : window.devicePixelRatio;\n    } else {\n      this.pixelRatio = 1;\n    }\n\n    const ratio = this.pixelRatio;\n\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n\n    const particles = options.particles;\n    this.linksDistance = particles.links.distance * ratio;\n    this.linksWidth = particles.links.width * ratio;\n    this.moveSpeed = particles.move.speed * ratio;\n    this.sizeValue = particles.size.value * ratio;\n    this.sizeAnimationSpeed = particles.size.animation.speed * ratio;\n    const modes = options.interactivity.modes;\n    this.connectModeDistance = modes.connect.distance * ratio;\n    this.connectModeRadius = modes.connect.radius * ratio;\n    this.grabModeDistance = modes.grab.distance * ratio;\n    this.repulseModeDistance = modes.repulse.distance * ratio;\n    this.attractModeDistance = modes.attract.distance * ratio;\n    this.slowModeRadius = modes.slow.radius * ratio;\n    this.bubbleModeDistance = modes.bubble.distance * ratio;\n\n    if (modes.bubble.size) {\n      this.bubbleModeSize = modes.bubble.size * ratio;\n    }\n  }\n\n  initParticle(particle) {\n    const particlesOptions = particle.particlesOptions;\n    const ratio = this.pixelRatio;\n    particle.linksDistance = particlesOptions.links.distance * ratio;\n    particle.linksWidth = particlesOptions.links.width * ratio;\n    particle.moveSpeed = particlesOptions.move.speed * ratio;\n    particle.sizeValue = particlesOptions.size.value * ratio;\n\n    if (typeof particlesOptions.size.random !== \"boolean\") {\n      particle.randomMinimumSize = particlesOptions.size.random.minimumValue * ratio;\n    }\n\n    particle.sizeAnimationSpeed = particlesOptions.size.animation.speed * ratio;\n  }\n\n}\n\nexports.Retina = Retina;","map":null,"metadata":{},"sourceType":"script"}