{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _slicedToArray = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Container = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nvar Canvas_1 = require(\"./Canvas\");\n\nvar Particles_1 = require(\"./Particles\");\n\nvar Retina_1 = require(\"./Retina\");\n\nvar FrameManager_1 = require(\"./FrameManager\");\n\nvar Options_1 = require(\"../Options/Classes/Options\");\n\nvar Utils_1 = require(\"../Utils\");\n\nvar Container =\n/*#__PURE__*/\nfunction () {\n  function Container(id, sourceOptions) {\n    _classCallCheck(this, Container);\n\n    this.id = id;\n    this.sourceOptions = sourceOptions;\n    this.started = false;\n    this.destroyed = false;\n    this.paused = true;\n    this.lastFrameTime = 0;\n    this.pageHidden = false;\n    this.retina = new Retina_1.Retina(this);\n    this.canvas = new Canvas_1.Canvas(this);\n    this.particles = new Particles_1.Particles(this);\n    this.drawer = new FrameManager_1.FrameManager(this);\n    this.noise = {\n      generate: function generate() {\n        return {\n          angle: Math.random() * Math.PI * 2,\n          length: Math.random()\n        };\n      },\n      init: function init() {},\n      update: function update() {}\n    };\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.bubble = {};\n    this.repulse = {\n      particles: []\n    };\n    this.attract = {\n      particles: []\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this.density = 1;\n    this.options = new Options_1.Options();\n\n    for (var _len = arguments.length, presets = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      presets[_key - 2] = arguments[_key];\n    }\n\n    for (var _i = 0, _presets = presets; _i < _presets.length; _i++) {\n      var preset = _presets[_i];\n      this.options.load(Utils_1.Plugins.getPreset(preset));\n    }\n\n    var shapes = Utils_1.Plugins.getSupportedShapes();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = shapes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var type = _step.value;\n        var drawer = Utils_1.Plugins.getShapeDrawer(type);\n\n        if (drawer) {\n          this.drawers.set(type, drawer);\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    if (this.sourceOptions) {\n      this.options.load(this.sourceOptions);\n    }\n\n    this.eventListeners = new Utils_1.EventListeners(this);\n  }\n\n  _createClass(Container, [{\n    key: \"play\",\n    value: function play(force) {\n      var needsUpdate = this.paused || force;\n\n      if (this.paused) {\n        this.paused = false;\n      }\n\n      if (needsUpdate) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.plugins[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _ref3 = _step2.value;\n\n            var _ref2 = _slicedToArray(_ref3, 2);\n\n            var plugin = _ref2[1];\n\n            if (plugin.play) {\n              plugin.play();\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        this.lastFrameTime = performance.now();\n      }\n\n      this.draw();\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      if (this.drawAnimationFrame !== undefined) {\n        Utils_1.Utils.cancelAnimation(this.drawAnimationFrame);\n        delete this.drawAnimationFrame;\n      }\n\n      if (this.paused) {\n        return;\n      }\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.plugins[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _ref6 = _step3.value;\n\n          var _ref5 = _slicedToArray(_ref6, 2);\n\n          var plugin = _ref5[1];\n\n          if (plugin.pause) {\n            plugin.pause();\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (!this.pageHidden) {\n        this.paused = true;\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _this = this;\n\n      this.drawAnimationFrame = Utils_1.Utils.animate(function (t) {\n        return _this.drawer.nextFrame(t);\n      });\n    }\n  }, {\n    key: \"getAnimationStatus\",\n    value: function getAnimationStatus() {\n      return !this.paused;\n    }\n  }, {\n    key: \"setNoise\",\n    value: function setNoise(noiseOrGenerator, init, update) {\n      if (!noiseOrGenerator) {\n        return;\n      }\n\n      if (typeof noiseOrGenerator === \"function\") {\n        this.noise.generate = noiseOrGenerator;\n\n        if (init) {\n          this.noise.init = init;\n        }\n\n        if (update) {\n          this.noise.update = update;\n        }\n      } else {\n        if (noiseOrGenerator.generate) {\n          this.noise.generate = noiseOrGenerator.generate;\n        }\n\n        if (noiseOrGenerator.init) {\n          this.noise.init = noiseOrGenerator.init;\n        }\n\n        if (noiseOrGenerator.update) {\n          this.noise.update = noiseOrGenerator.update;\n        }\n      }\n    }\n  }, {\n    key: \"densityAutoParticles\",\n    value: function densityAutoParticles() {\n      this.initDensityFactor();\n      var numberOptions = this.options.particles.number;\n      var optParticlesNumber = numberOptions.value;\n      var optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber;\n      var particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * this.density;\n      var particlesCount = this.particles.count;\n\n      if (particlesCount < particlesNumber) {\n        this.particles.push(Math.abs(particlesNumber - particlesCount));\n      } else if (particlesCount > particlesNumber) {\n        this.particles.removeQuantity(particlesCount - particlesNumber);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stop();\n      this.canvas.destroy();\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.drawers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var _ref9 = _step4.value;\n\n          var _ref8 = _slicedToArray(_ref9, 2);\n\n          var drawer = _ref8[1];\n\n          if (drawer.destroy) {\n            drawer.destroy(this);\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      this.drawers = new Map();\n      this.destroyed = true;\n    }\n  }, {\n    key: \"exportImg\",\n    value: function exportImg(callback) {\n      this.exportImage(callback);\n    }\n  }, {\n    key: \"exportImage\",\n    value: function exportImage(callback, type, quality) {\n      var _a;\n\n      return (_a = this.canvas.element) === null || _a === void 0 ? void 0 : _a.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n  }, {\n    key: \"exportConfiguration\",\n    value: function exportConfiguration() {\n      return JSON.stringify(this.options, undefined, 2);\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      return tslib_1.__awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.stop();\n                _context.next = 3;\n                return this.start();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this.started) {\n        return;\n      }\n\n      this.started = false;\n      this.eventListeners.removeListeners();\n      this.pause();\n      this.particles.clear();\n      this.canvas.clear();\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.plugins[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var _ref12 = _step5.value;\n\n          var _ref11 = _slicedToArray(_ref12, 2);\n\n          var plugin = _ref11[1];\n\n          if (plugin.stop) {\n            plugin.stop();\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.plugins = new Map();\n      this.particles.linksColors = new Map();\n      delete this.particles.grabLineColor;\n      delete this.particles.linksColor;\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      return tslib_1.__awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _iteratorNormalCompletion6, _didIteratorError6, _iteratorError6, _iterator6, _step6, _ref15, _ref14, plugin;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this.started) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 2:\n                _context2.next = 4;\n                return this.init();\n\n              case 4:\n                this.started = true;\n                this.eventListeners.addListeners();\n                _iteratorNormalCompletion6 = true;\n                _didIteratorError6 = false;\n                _iteratorError6 = undefined;\n                _context2.prev = 9;\n                _iterator6 = this.plugins[Symbol.iterator]();\n\n              case 11:\n                if (_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done) {\n                  _context2.next = 24;\n                  break;\n                }\n\n                _ref15 = _step6.value;\n                _ref14 = _slicedToArray(_ref15, 2);\n                plugin = _ref14[1];\n\n                if (!(plugin.startAsync !== undefined)) {\n                  _context2.next = 20;\n                  break;\n                }\n\n                _context2.next = 18;\n                return plugin.startAsync();\n\n              case 18:\n                _context2.next = 21;\n                break;\n\n              case 20:\n                if (plugin.start !== undefined) {\n                  plugin.start();\n                }\n\n              case 21:\n                _iteratorNormalCompletion6 = true;\n                _context2.next = 11;\n                break;\n\n              case 24:\n                _context2.next = 30;\n                break;\n\n              case 26:\n                _context2.prev = 26;\n                _context2.t0 = _context2[\"catch\"](9);\n                _didIteratorError6 = true;\n                _iteratorError6 = _context2.t0;\n\n              case 30:\n                _context2.prev = 30;\n                _context2.prev = 31;\n\n                if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n                  _iterator6.return();\n                }\n\n              case 33:\n                _context2.prev = 33;\n\n                if (!_didIteratorError6) {\n                  _context2.next = 36;\n                  break;\n                }\n\n                throw _iteratorError6;\n\n              case 36:\n                return _context2.finish(33);\n\n              case 37:\n                return _context2.finish(30);\n\n              case 38:\n                this.play();\n\n              case 39:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[9, 26, 30, 38], [31,, 33, 37]]);\n      }));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      return tslib_1.__awaiter(this, void 0, void 0,\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var availablePlugins, _iteratorNormalCompletion7, _didIteratorError7, _iteratorError7, _iterator7, _step7, _ref22, _ref17, id, plugin, _iteratorNormalCompletion8, _didIteratorError8, _iteratorError8, _iterator8, _step8, _ref23, _ref19, drawer, _iteratorNormalCompletion9, _didIteratorError9, _iteratorError9, _iterator9, _step9, _ref24, _ref21, _plugin;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.retina.init();\n                this.canvas.init();\n                availablePlugins = Utils_1.Plugins.getAvailablePlugins(this);\n                _iteratorNormalCompletion7 = true;\n                _didIteratorError7 = false;\n                _iteratorError7 = undefined;\n                _context3.prev = 6;\n\n                for (_iterator7 = availablePlugins[Symbol.iterator](); !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                  _ref22 = _step7.value;\n                  _ref17 = _slicedToArray(_ref22, 2);\n                  id = _ref17[0];\n                  plugin = _ref17[1];\n                  this.plugins.set(id, plugin);\n                }\n\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](6);\n                _didIteratorError7 = true;\n                _iteratorError7 = _context3.t0;\n\n              case 14:\n                _context3.prev = 14;\n                _context3.prev = 15;\n\n                if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n                  _iterator7.return();\n                }\n\n              case 17:\n                _context3.prev = 17;\n\n                if (!_didIteratorError7) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                throw _iteratorError7;\n\n              case 20:\n                return _context3.finish(17);\n\n              case 21:\n                return _context3.finish(14);\n\n              case 22:\n                _iteratorNormalCompletion8 = true;\n                _didIteratorError8 = false;\n                _iteratorError8 = undefined;\n                _context3.prev = 25;\n                _iterator8 = this.drawers[Symbol.iterator]();\n\n              case 27:\n                if (_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done) {\n                  _context3.next = 37;\n                  break;\n                }\n\n                _ref23 = _step8.value;\n                _ref19 = _slicedToArray(_ref23, 2);\n                drawer = _ref19[1];\n\n                if (!drawer.init) {\n                  _context3.next = 34;\n                  break;\n                }\n\n                _context3.next = 34;\n                return drawer.init(this);\n\n              case 34:\n                _iteratorNormalCompletion8 = true;\n                _context3.next = 27;\n                break;\n\n              case 37:\n                _context3.next = 43;\n                break;\n\n              case 39:\n                _context3.prev = 39;\n                _context3.t1 = _context3[\"catch\"](25);\n                _didIteratorError8 = true;\n                _iteratorError8 = _context3.t1;\n\n              case 43:\n                _context3.prev = 43;\n                _context3.prev = 44;\n\n                if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n                  _iterator8.return();\n                }\n\n              case 46:\n                _context3.prev = 46;\n\n                if (!_didIteratorError8) {\n                  _context3.next = 49;\n                  break;\n                }\n\n                throw _iteratorError8;\n\n              case 49:\n                return _context3.finish(46);\n\n              case 50:\n                return _context3.finish(43);\n\n              case 51:\n                _iteratorNormalCompletion9 = true;\n                _didIteratorError9 = false;\n                _iteratorError9 = undefined;\n                _context3.prev = 54;\n                _iterator9 = this.plugins[Symbol.iterator]();\n\n              case 56:\n                if (_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done) {\n                  _context3.next = 70;\n                  break;\n                }\n\n                _ref24 = _step9.value;\n                _ref21 = _slicedToArray(_ref24, 2);\n                _plugin = _ref21[1];\n\n                if (!_plugin.init) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _plugin.init(this.options);\n\n                _context3.next = 67;\n                break;\n\n              case 64:\n                if (!(_plugin.initAsync !== undefined)) {\n                  _context3.next = 67;\n                  break;\n                }\n\n                _context3.next = 67;\n                return _plugin.initAsync(this.options);\n\n              case 67:\n                _iteratorNormalCompletion9 = true;\n                _context3.next = 56;\n                break;\n\n              case 70:\n                _context3.next = 76;\n                break;\n\n              case 72:\n                _context3.prev = 72;\n                _context3.t2 = _context3[\"catch\"](54);\n                _didIteratorError9 = true;\n                _iteratorError9 = _context3.t2;\n\n              case 76:\n                _context3.prev = 76;\n                _context3.prev = 77;\n\n                if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n                  _iterator9.return();\n                }\n\n              case 79:\n                _context3.prev = 79;\n\n                if (!_didIteratorError9) {\n                  _context3.next = 82;\n                  break;\n                }\n\n                throw _iteratorError9;\n\n              case 82:\n                return _context3.finish(79);\n\n              case 83:\n                return _context3.finish(76);\n\n              case 84:\n                this.particles.init();\n                this.densityAutoParticles();\n\n              case 86:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 10, 14, 22], [15,, 17, 21], [25, 39, 43, 51], [44,, 46, 50], [54, 72, 76, 84], [77,, 79, 83]]);\n      }));\n    }\n  }, {\n    key: \"initDensityFactor\",\n    value: function initDensityFactor() {\n      var densityOptions = this.options.particles.number.density;\n\n      if (!this.canvas.element || !densityOptions.enable) {\n        return;\n      }\n\n      var canvas = this.canvas.element;\n      var pxRatio = this.retina.pixelRatio;\n      this.density = canvas.width * canvas.height / (densityOptions.factor * pxRatio * densityOptions.area);\n    }\n  }]);\n\n  return Container;\n}();\n\nexports.Container = Container;","map":null,"metadata":{},"sourceType":"script"}