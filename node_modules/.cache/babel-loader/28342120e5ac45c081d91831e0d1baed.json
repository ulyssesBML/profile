{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _get = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/ulysses/Documentos/profile/profile/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnimatableColor = void 0;\n\nvar OptionsColor_1 = require(\"../OptionsColor\");\n\nvar ColorAnimation_1 = require(\"./ColorAnimation\");\n\nvar AnimatableColor = /*#__PURE__*/function (_OptionsColor_1$Optio) {\n  _inherits(AnimatableColor, _OptionsColor_1$Optio);\n\n  function AnimatableColor() {\n    var _this;\n\n    _classCallCheck(this, AnimatableColor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatableColor).call(this));\n    _this.animation = new ColorAnimation_1.ColorAnimation();\n    return _this;\n  }\n\n  _createClass(AnimatableColor, [{\n    key: \"load\",\n    value: function load(data) {\n      _get(_getPrototypeOf(AnimatableColor.prototype), \"load\", this).call(this, data);\n\n      this.animation.load(data === null || data === void 0 ? void 0 : data.animation);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(source, data) {\n      var color = source !== null && source !== void 0 ? source : new AnimatableColor();\n\n      if (data !== undefined) {\n        color.load(typeof data === \"string\" ? {\n          value: data\n        } : data);\n      }\n\n      return color;\n    }\n  }]);\n\n  return AnimatableColor;\n}(OptionsColor_1.OptionsColor);\n\nexports.AnimatableColor = AnimatableColor;","map":null,"metadata":{},"sourceType":"script"}